(function(){var ga=Math.imul||function(a,b){return (a*(b>>>16)<<16)+a*(b&65535)|0};var D;function n(a,b,c,d){var e=a.getElementsByClassName(b)[0];return e.width=e.height=c,e.style.width=e.style.height=d+'px',e}function t(a){var b=null;try{b=new oa(a)}catch(c){document.getElementById('demo-page').style.display='none',document.getElementById('webgl-error').style.display=null;throw c}return b}function o(a,b){var c=a.getBoundingClientRect();return new pa(b.offsetX/c.width*a.width,b.offsetY/c.height*a.height)}function Q(a){var b=n(a,'input-canvas',512,256),c=n(a,'output-canvas',512,256),d=t(c),e=new ia(b,c);e.g=function(){x(d,b),y(d),w(d)}}function R(a){var b=n(a,'input-canvas',512,256),c=n(a,'output-canvas',512,256),d=t(c),e=new ka(b,c);e.d=function(){x(d,b),y(d),w(d)}}function S(a){var b=n(a,'input-canvas',512,256),c=n(a,'output-canvas',512,256),d=t(c),e=new ma(b,c);e.m=function(){x(d,e.d),y(d),w(d)}}function ha(){window.onload=function(){Q(document.getElementById('paint-demo-container')),R(document.getElementById('fish-demo-container')),
S(document.getElementById('photo-demo-container'))}}function Y(a,b){var c=a.getExtension(b);if(!c)throw new Error('Unsupported WebGL extension with name '+b);return c}function Z(a){return a!=0&&(a&a-1)==0}function K(a,b){return a-b*Math.floor(a/b)}function T(b,a){b.c.beginPath(),b.c.rect(a.a-b.f|0,a.b-b.f|0,b.f<<1,b.f<<1),b.c.fillStyle=J(b.d),b.c.fill(),b.g&&b.g()}function E(b,a){a.beginPath(),a.rect(b.a.a-(b.b/2|0)|0,b.a.b-(b.b/2|0)|0,b.b,b.b),a.fillStyle=J(b.c),a.fill(),a.closePath()}function V(e){var a=null,b=function(){var c=new Date,d=a?+c-+a:1/30;W(e,d/1000),a=c,requestAnimationFrame(b)};requestAnimationFrame(b)}function W(e,a){e.c.clearRect(0,0,e.a.width,e.a.height);for(var b=1,f=e.f.length;b<f;b=b+1|0){var c=e.f[b];c.a.a+=e.g[b]*a,c.a.b-=e.g[b]*a,aa(c.a,new pa(e.a.width,e.a.height))}for(var g=0,k=e.f,m=k.length;g<m;g=g+1|0){var d=k[g];E(d,e.c)}E(e.k,e.c),e.d&&e.d()}function F(b,a){b.e=o(b.a.a,a),H(b.a),v(b.a),u(b),b.a.m()}function X(c,a){var b=c.a.d.width;a.a>0&&a.b>0&&a.a<b&&a.b<b&&I(c.a,a)}function u(b){
for(var c=0,d=b.c,e=d.length;c<e;c=c+1|0){var a=d[c];X(b,$(b.e,ba(a,b.d)))}}function G(e,a,b,c,d){a.beginPath(),a.rect(b.a|0,b.b|0,d,d),a.fillStyle=c,a.fill()}function H(a){a.e.clearRect(0,0,a.d.width,a.d.height)}function v(a){a.c.drawImage(a.f,0,0)}function I(b,a){G(b,b.c,a,'rgba(255, 255, 255, 0.5)',4),G(b,b.e,a,b.g,1)}function J(a){return 'rgba('+(a.a*255|0)+', '+(a.b*255|0)+', '+(a.c*255|0)+', '+a.d+')'}function i(a){return new na((a>>16&255)/255|0,(a>>8&255)/255,(a&255)/255,1)}function w(a){a.a.defaultFramebuffer.bind(),a.g.bind(0),a.a.gl.viewport(0,0,a.j.width,a.j.height),a.p.use().attrib('quad',a.e,2).uniformi('iCellGridTexture',0).uniform('iCanvasSize',new Float32Array([a.j.width,a.j.height])).uniform('iGridSize',new Float32Array([a.b,a.b])).uniform('iRelease',!0,!0).draw(5,4)}function x(c,a){c.m.attach(c.f);var b=c.a.gl;b.bindTexture(3553,c.k.texture),b.texImage2D(3553,0,6408,6408,5121,a),c.k.bind(0),c.a.gl.viewport(0,0,c.b,c.b),c.d.use().attrib('quad',c.e,2).uniformi('iCellGridTexture',0).uniform('iCellGridSize',
new Float32Array([c.b,c.b])).uniform('iBackgroundColor',new Float32Array([0,0,0,0])).draw(5,4)}function y(b){for(var a=b.b/2|0;a>0;)z(b,a),a=a/2|0;z(b,2),z(b,1)}function z(b,a){b.m.attach(b.g),b.f.bind(0),b.a.gl.viewport(0,0,b.b,b.b),b.c.use().attrib('quad',b.e,2).uniformi('iCellGridTexture',0).uniformi('iStepSize',a).uniform('iCellGridSize',new Float32Array([b.b,b.b])).uniformi('iUseTorusDistanceForSeeds',0).draw(5,4),_(b)}function _(b){var a=b.f;b.f=b.g,b.g=a}function $(b,a){return new pa(b.a+a.a,b.b+a.b)}function aa(b,a){b.a=K(b.a,a.a),b.b=K(b.b,a.b)}function ba(b,a){return new pa(b.a*Math.cos(a)-b.b*Math.sin(a),b.b*Math.cos(a)+b.a*Math.sin(a))}function l(a,b,c){a.addEventListener(b,c)}function r(a){try{return a.getContext('2d')}catch(b){}return null}function ia(a,b){var j=this;j.c=j.d=null,j.e=0,j.f=2,j.g=null,j.a=a,j.b=b,j.a.style.backgroundColor='white',j.c=r(j.a),l(document,'keyup',function(c){c.which^67||(j.e=(j.e+1|0)%fa.length|0)});var d=function(e){e.a>0&&e.b>0&&e.a<j.a.width&&e.b<j.a.height&&(j.d=new na(.5+Math.random()*.4,
.2,.3+Math.random()*.5,1),T(j,e))},f=!1;l(document,'mousedown',function(g){f=!0,d(o(j.a,g))});for(var s=0,q=[j.a,j.b],A=q.length;s<A;s=s+1|0){var k=q[s];l(k,'mousemove',function(m){f&&d(o(j.a,m))})}l(document,'mouseup',function(h){f=!1}),l(document,'mouseleave',function(p){f=!1})}function ja(a){this.a=a,this.b=4,this.c=new na(0,0,1,1)}function ka(a,b){var f=this;f.a=f.b=f.c=f.d=null,f.e=40,f.f=[],f.g=[],f.k=null,f.a=a,f.b=b,f.c=r(f.a);for(var c=1,g=f.e;c<g;c=c+1|0)f.f.push(new ja(new pa(Math.random()*f.a.width,Math.random()*f.a.height))),f.f[f.f.length-1|0].c=U[c%U.length|0],f.g.push(15+Math.random()*8);f.k=new ja(new pa(Math.random()*f.a.width,Math.random()*f.a.height)),f.k.c=i(16771345);for(var k=0,m=[f.a,f.b],h=m.length;k<h;k=k+1|0){var d=m[k];l(d,'mousemove',function(e){f.k.a=o(d,e)})}V(f)}function la(a){var g=this;g.a=null,g.b=!1,g.c=[],g.d=0,g.e=new pa(0,0),g.a=a,g.e=new pa(a.d.width/2|0,a.d.height/2|0);for(var b=0;b<20;b=b+1|0)for(var c=ga(b,b),d=0;d<10;d++){var e=c*Math.cos(d/10*3.141592653589793*2),f=c*Math.sin(d/10*3.141592653589793*2);
e+=Math.random()*30-15,f+=Math.random()*30-15,g.c.push(new pa(e,f))}u(g),setInterval(function(){g.d+=.005,H(g.a),v(g.a),u(g),g.a.m()},16)}D=la.prototype;D.N=function(a){this.b=!0,a.stopPropagation(),F(this,a)};D.O=function(a){this.b&&F(this,a),a.stopPropagation()};D.P=function(a){I(this.a,o(this.a.a,a)),this.b=!1,a.stopPropagation()};function ma(a,b){var h=this;h.a=h.b=h.c=h.d=h.e=h.f=h.g=null,h.k=!1,h.m=null,h.h=[],h.a=a,h.b=b,h.c=r(h.a),h.d=document.createElement('canvas'),h.e=r(h.d),h.d.width=h.a.width,h.d.height=h.a.height,h.f=document.getElementById('eye'),h.g=h.e.createPattern(h.f,'repeat'),v(h);for(var C=0,M=[h.a,h.b],ea=M.length;C<ea;C=C+1|0){var c=M[C];l(c,'mousedown',function(d){for(var p=0,j=h.h,s=j.length;p<s;p=p+1|0){var e=j[p];e.N(d)}}),l(c,'mousemove',function(f){for(var q=0,A=h.h,ca=A.length;q<ca;q=q+1|0){var g=A[q];g.O(f)}}),l(c,'mouseup',function(k){for(var B=0,L=h.h,da=L.length;B<da;B=B+1|0){var m=L[B];m.P(k)}})}h.h=[new la(h)]}function na(a,b,c,d){this.a=a,this.b=b,this.c=c,this.d=d}function oa(a){
if(this.a=null,this.b=0,this.c=this.d=this.e=this.f=this.g=this.k=this.m=this.h=this.p=this.j=null,a.width^a.height)throw new Error('JumpFlood canvas parameter must be square. Size is ('+a.width+', '+a.height+')');if(!Z(a.width))throw new Error('JumpFlood canvas size must be a power of two. Size is '+a.width);if(this.b=a.width,this.j=a,this.a=new Igloo(a),!this.a.gl)throw new Error('Failed to initialize Igloo');this.a.gl.disable(2929),this.p=new Igloo.Program(this.a.gl,'precision highp float;\n\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\nattribute vec2 quad;\n\nvoid main() {\n  gl_Position = vec4(quad, 0, 1.0);\n}\n','precision highp float;\n\nuniform sampler2D iCellGridTexture;\nuniform vec2 iGridSize, iCanvasSize;\nuniform int iRelease;\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\n\nint C(int a, int b) {\n  return int(mod(float(a), float(b)));\n}\n\nvec2 w(int a) {\n  return vec2(a / 256, C(a, 256));\n}\n\nbool f(float a, float b) {\n  return abs(a - b) < 1e-4;\n}\n\nbool v(vec2 a, vec2 b, vec2 c) {\n  return a.x > b.x && a.x < c.x && a.y > b.y && a.y < c.y;\n}\n\nvec2 A(vec2 b) {\n  vec2 a = gl_FragCoord.xy / iCanvasSize;\n  return vec2(0.0, 0.0) + iGridSize * a;\n}\n\nbool i(vec2 a) {\n  return a.x >= 0.0 && a.y >= 0.0 && a.x <= 1.0 && a.y <= 1.0;\n}\n\nvec4 D(const vec4 a) {\n  int b = int(a.x), c = int(a.y);\n  return vec4(w(b), w(c)) / 255.0;\n}\n\nbool j(const vec4 a) {\n  return!f(a.y, -1.0);\n}\n\nvoid x(vec2 a) {\n  if (iRelease == 1)\n    return;\n  vec4 b = vec4(1.0, 0.5, 0.5, 1.0), c = vec4(0.5, 0.5, 1.0, 1.0), d = vec4(0.5, 1.0, 0.5, 1.0);\n  if (mod(a.x, 100.0) < 3.0 || mod(a.y, 100.0) < 3.0)\n    gl_FragColor = (b + gl_FragColor) / 2.0;\n  if (v(a.xy, vec2(0.0, 0.0), vec2(10.0, 10.0)))\n    gl_FragColor = (d + gl_FragColor) / 2.0;\n  if (v(a.xy, vec2(100.0, 100.0), vec2(110.0, 110.0)))\n    gl_FragColor = (c + gl_FragColor) / 2.0;\n}\n\nvoid main() {\n  vec2 a = A(gl_FragCoord.xy), b = a / iGridSize;\n  if (!i(b)) {\n    gl_FragColor = h, x(a);\n    return;\n  }\n  vec4 c = texture2D(iCellGridTexture, b);\n  if (!j(c))\n    discard;\n  else\n    gl_FragColor = D(c);\n}\n');
var b=this.a.gl;Y(b,'OES_texture_float'),b.disable(2929),this.c=new Igloo.Program(this.a.gl,'precision highp float;\n\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\nattribute vec2 quad;\n\nvoid main() {\n  gl_Position = vec4(quad, 0, 1.0);\n}\n','precision highp float;\n\nuniform sampler2D iCellGridTexture;\nuniform vec2 iCellGridSize;\nuniform int iStepSize;\nuniform bool iUseTorusDistanceForSeeds;\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\n\nbool f(float a, float b) {\n  return abs(a - b) < 1e-4;\n}\n\nbool i(vec2 a) {\n  return a.x >= 0.0 && a.y >= 0.0 && a.x <= 1.0 && a.y <= 1.0;\n}\n\nvec4 m() {\n  return vec4(-1.0, -1.0, -1.0, -1.0);\n}\n\nvec2 t(const vec4 a) {\n  return vec2(a.z, a.w);\n}\n\nbool j(const vec4 a) {\n  return!f(a.y, -1.0);\n}\n\nfloat u(vec2 a, vec2 b, vec2 c) {\n  float d = min(abs(a.x - b.x), c.x - abs(a.x - b.x)), g = min(abs(a.y - b.y), c.y - abs(a.y - b.y));\n  return sqrt(d * d + g * g);\n}\n\nvec4 e(const vec4 b, const vec2 z) {\n  vec2 c = (gl_FragCoord.xy + z) / iCellGridSize;\n  vec4 a = texture2D(iCellGridTexture, c);\n  a = !i(c) && !iUseTorusDistanceForSeeds ? m() : a;\n  if (!j(a))\n    return b;\n  else if (!j(b))\n    return a;\n  else {\n    vec2 d = t(b), g = t(a);\n    if (iUseTorusDistanceForSeeds) {\n      if (u(d, gl_FragCoord.xy, iCellGridSize) > u(g, gl_FragCoord.xy, iCellGridSize))\n        return a;\n    }\n    else if (distance(d, gl_FragCoord.xy) > distance(g, gl_FragCoord.xy))\n      return a;\n  }\n  return b;\n}\n\nvoid main() {\n  vec2 b = gl_FragCoord.xy / iCellGridSize;\n  if (!i(b))\n    discard;\n  vec4 a = texture2D(iCellGridTexture, b);\n  a = e(a, vec2(0, iStepSize)), a = e(a, vec2(iStepSize, iStepSize)), a = e(a, vec2(iStepSize, 0)), a = e(a, vec2(iStepSize, -iStepSize)), a = e(a, vec2(0, -iStepSize)), a = e(a, vec2(-iStepSize, -iStepSize)), a = e(a, vec2(-iStepSize, 0)), a = e(a, vec2(-iStepSize, iStepSize)), gl_FragColor = a;\n}\n'),
this.d=new Igloo.Program(this.a.gl,'precision highp float;\n\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\nattribute vec2 quad;\n\nvoid main() {\n  gl_Position = vec4(quad, 0, 1.0);\n}\n','precision highp float;\n\nuniform sampler2D iCellGridTexture;\nuniform vec2 iCellGridSize;\nuniform vec4 iBackgroundColor;\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\n\nint s(int a, int b) {\n  return a * 256 + b;\n}\n\nbool f(float a, float b) {\n  return abs(a - b) < 1e-4;\n}\n\nbool y(vec4 a, vec4 b) {\n  return f(a.x, b.x) && f(a.y, b.y) && f(a.z, b.z) && f(a.w, b.w);\n}\n\nvec4 B(float a, float b, vec2 c) {\n  return vec4(a, b, c);\n}\n\nvec4 m() {\n  return vec4(-1.0, -1.0, -1.0, -1.0);\n}\n\nvoid main() {\n  vec2 b = gl_FragCoord.xy / iCellGridSize, c = vec2(b.x, 1.0 - b.y);\n  vec4 a = texture2D(iCellGridTexture, c);\n  if (y(a, iBackgroundColor))\n    gl_FragColor = m();\n  else {\n    int d = s(int(a.r * 255.0), int(a.g * 255.0)), g = s(int(a.b * 255.0), int(a.a * 255.0));\n    gl_FragColor = B(float(d), float(g), gl_FragCoord.xy);\n  }\n}\n'),
this.e=this.a.array(Igloo.QUAD2),this.f=this.a.texture(null,6408,10497,9728,5126).blank(this.b,this.b),this.g=this.a.texture(null,6408,10497,9728,5126).blank(this.b,this.b),this.k=this.a.texture(null,6408,10497,9728,5121).blank(this.b,this.b),this.m=this.a.framebuffer()}function pa(a,b){this.a=a,this.b=b}var fa=[i(7667884),i(14373119),i(5046527),i(9651967),i(10042034),i(4150527),i(233724),i(16777215)],U=[i(7051762),i(4814543),i(8428277),i(8305894),i(9011445),i(970239),i(5611513)];ha()})();
