(function(){var ha=Math.imul||function(a,b){return (a*(b>>>16)<<16)+a*(b&65535)|0};var E;function o(a,b,c,e){var f=a.getElementsByClassName(b)[0];return f.width=f.height=c,f.style.width=f.style.height=e+'px',f}function u(a){var b=null;try{b=new pa(a)}catch(c){document.getElementById('demo-page').style.display='none',document.getElementById('webgl-error').style.display=null;throw c}return b}function q(a,b){var c=a.getBoundingClientRect();return new qa(b.offsetX/c.width*a.width,b.offsetY/c.height*a.height)}function R(a){var b=o(a,'input-canvas',512,256),c=o(a,'output-canvas',512,256),e=u(c);new ja(b,c,function(){y(e,b),z(e),x(e)})}function S(a){var b=o(a,'input-canvas',512,256),c=o(a,'output-canvas',512,256),e=u(c);new la(b,c,function(){y(e,b),z(e),x(e)})}function T(a){var b=o(a,'input-canvas',512,256),c=o(a,'output-canvas',512,256),e=u(c);new na(b,c,function(f){y(e,f.e),z(e),x(e)})}function ia(){window.onload=function(){R(document.getElementById('paint-demo-container')),S(document.getElementById('fish-demo-container')),
T(document.getElementById('photo-demo-container'))}}function Z(a,b){var c=a.getExtension(b);if(!c)throw new Error('Unsupported WebGL extension with name '+b);return c}function _(a){return a!=0&&(a&a-1)==0}function L(a,b){return a-b*Math.floor(a/b)}function U(b,a){b.c.beginPath(),b.c.rect(a.a-b.h|0,a.b-b.h|0,b.h<<1,b.h<<1),b.c.fillStyle=K(b.e),b.c.fill(),b.d&&b.d()}function F(b,a){a.beginPath(),a.rect(b.a.a-(b.b/2|0)|0,b.a.b-(b.b/2|0)|0,b.b,b.b),a.fillStyle=K(b.c),a.fill(),a.closePath()}function W(f){var a=null,b=function(){var c=new Date,e=a?+c-+a:1/30;X(f,e/1000),a=c,requestAnimationFrame(b)};requestAnimationFrame(b)}function X(f,a){f.c.clearRect(0,0,f.a.width,f.a.height);for(var b=1,h=f.h.length;b<h;b=b+1|0){var c=f.h[b];c.a.a+=f.d[b]*a,c.a.b-=f.d[b]*a,ba(c.a,new qa(f.a.width,f.a.height))}for(var d=0,k=f.h,l=k.length;d<l;d=d+1|0){var e=k[d];F(e,f.c)}F(f.k,f.c),f.e&&f.e()}function G(b,a){b.f=q(b.a.a,a),I(b.a),w(b.a),v(b),b.a.l(b.a)}function Y(c,a){var b=c.a.e.width;a.a>0&&a.b>0&&a.a<b&&a.b<b&&J(c.a,a)}function v(b){
for(var c=0,e=b.c,f=e.length;c<f;c=c+1|0){var a=e[c];Y(b,aa(b.f,ca(a,b.e)))}}function H(f,a,b,c,e){a.beginPath(),a.rect(b.a|0,b.b|0,e,e),a.fillStyle=c,a.fill()}function I(a){a.f.clearRect(0,0,a.e.width,a.e.height)}function w(a){a.c.drawImage(a.h,0,0)}function J(b,a){H(b,b.c,a,'rgba(255, 255, 255, 0.5)',4),H(b,b.f,a,b.d,1)}function K(a){return 'rgba('+(a.a*255|0)+', '+(a.b*255|0)+', '+(a.c*255|0)+', '+a.e+')'}function i(a){return new oa((a>>16&255)/255|0,(a>>8&255)/255,(a&255)/255,1)}function x(a){a.a.defaultFramebuffer.bind(),a.d.bind(0),a.a.gl.viewport(0,0,a.p.width,a.p.height),a.g.use().attrib('quad',a.f,2).uniformi('iCellGridTexture',0).uniform('iCanvasSize',new Float32Array([a.p.width,a.p.height])).uniform('iGridSize',new Float32Array([a.b,a.b])).uniform('iRelease',!0,!0).draw(5,4)}function y(c,a){c.l.attach(c.h);var b=c.a.gl;b.bindTexture(3553,c.k.texture),b.texImage2D(3553,0,6408,6408,5121,a),c.k.bind(0),c.a.gl.viewport(0,0,c.b,c.b),c.e.use().attrib('quad',c.f,2).uniformi('iCellGridTexture',0).uniform('iCellGridSize',
new Float32Array([c.b,c.b])).uniform('iBackgroundColor',new Float32Array([0,0,0,0])).draw(5,4)}function z(b){for(var a=b.b/2|0;a>0;)A(b,a),a=a/2|0;A(b,2),A(b,1)}function A(b,a){b.l.attach(b.d),b.h.bind(0),b.a.gl.viewport(0,0,b.b,b.b),b.c.use().attrib('quad',b.f,2).uniformi('iCellGridTexture',0).uniformi('iStepSize',a).uniform('iCellGridSize',new Float32Array([b.b,b.b])).uniformi('iUseTorusDistanceForSeeds',0).draw(5,4),$(b)}function $(b){var a=b.h;b.h=b.d,b.d=a}function aa(b,a){return new qa(b.a+a.a,b.b+a.b)}function ba(b,a){b.a=L(b.a,a.a),b.b=L(b.b,a.b)}function ca(b,a){return new qa(b.a*Math.cos(a)-b.b*Math.sin(a),b.b*Math.cos(a)+b.a*Math.sin(a))}function m(a,b,c){a.addEventListener(b,c)}function s(a){try{return a.getContext('2d')}catch(b){}return null}function ja(a,b,c){var j=this;j.c=j.e=null,j.f=0,j.h=2,j.a=a,j.b=b,j.d=c,j.a.style.backgroundColor='white',j.c=s(j.a),m(document,'keyup',function(e){e.which^67||(j.f=(j.f+1|0)%ga.length|0)});var f=function(h){h.a>0&&h.b>0&&h.a<j.a.width&&h.b<j.a.height&&(j.e=new oa(.5+Math.random()*.4,
.2,.3+Math.random()*.5,1),U(j,h))},d=!1;m(document,'mousedown',function(k){d=!0,f(q(j.a,k))});for(var t=0,r=[j.a,j.b],B=r.length;t<B;t=t+1|0){var l=r[t];m(l,'mousemove',function(n){d&&f(q(j.a,n))})}m(document,'mouseup',function(g){d=!1}),m(document,'mouseleave',function(p){d=!1}),f(new qa(j.a.width/2|0,j.a.height/2|0))}function ka(a){this.a=a,this.b=4,this.c=new oa(0,0,1,1)}function la(a,b,c){var d=this;d.a=d.b=d.c=d.e=null,d.f=40,d.h=[],d.d=[],d.k=null,d.a=a,d.b=b,d.e=c,d.c=s(d.a);for(var e=1,k=d.f;e<k;e=e+1|0)d.h.push(new ka(new qa(Math.random()*d.a.width,Math.random()*d.a.height))),d.h[d.h.length-1|0].c=V[e%V.length|0],d.d.push(15+Math.random()*8);d.k=new ka(new qa(Math.random()*d.a.width,Math.random()*d.a.height)),d.k.c=i(16771345);for(var l=0,n=[d.a,d.b],g=n.length;l<g;l=l+1|0){var f=n[l];m(f,'mousemove',function(h){d.k.a=q(f,h)})}W(d)}function ma(a){var d=this;d.a=null,d.b=!1,d.c=[],d.e=0,d.f=new qa(0,0),d.a=a,d.f=new qa(a.e.width/2|0,a.e.height/2|0);for(var b=0;b<20;b=b+1|0)for(var c=ha(b,b),e=0;e<10;e++){
var f=c*Math.cos(e/10*3.141592653589793*2),h=c*Math.sin(e/10*3.141592653589793*2);f+=Math.random()*30-15,h+=Math.random()*30-15,d.c.push(new qa(f,h))}v(d),setInterval(function(){d.e+=.005,I(d.a),w(d.a),v(d),d.a.l(d.a)},16)}E=ma.prototype;E.O=function(a){this.b=!0,a.stopPropagation(),G(this,a)};E.P=function(a){this.b&&G(this,a),a.stopPropagation()};E.Q=function(a){J(this.a,q(this.a.a,a)),this.b=!1,a.stopPropagation()};function na(a,b,c){var g=this;g.a=g.b=g.c=g.e=g.f=g.h=g.d=null,g.k=!1,g.l=null,g.n=[],g.a=a,g.b=b,g.l=c,g.c=s(g.a),g.e=document.createElement('canvas'),g.f=s(g.e),g.e.width=g.a.width,g.e.height=g.a.height,g.h=document.getElementById('eye'),g.d=g.f.createPattern(g.h,'repeat'),w(g);for(var D=0,N=[g.a,g.b],fa=N.length;D<fa;D=D+1|0){var e=N[D];m(e,'mousedown',function(f){for(var p=0,j=g.n,t=j.length;p<t;p=p+1|0){var h=j[p];h.O(f)}}),m(e,'mousemove',function(d){for(var r=0,B=g.n,da=B.length;r<da;r=r+1|0){var k=B[r];k.P(d)}}),m(e,'mouseup',function(l){for(var C=0,M=g.n,ea=M.length;C<ea;C=C+1|0){var n=M[C];
n.Q(l)}})}g.n=[new ma(g)]}function oa(a,b,c,e){this.a=a,this.b=b,this.c=c,this.e=e}function pa(a){if(this.a=null,this.b=0,this.c=this.e=this.f=this.h=this.d=this.k=this.l=this.n=this.g=this.p=null,a.width^a.height)throw new Error('JumpFlood canvas parameter must be square. Size is ('+a.width+', '+a.height+')');if(!_(a.width))throw new Error('JumpFlood canvas size must be a power of two. Size is '+a.width);if(this.b=a.width,this.p=a,this.a=new Igloo(a),!this.a.gl)throw new Error('Failed to initialize Igloo');this.a.gl.disable(2929),this.g=new Igloo.Program(this.a.gl,'precision highp float;\n\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\nattribute vec2 quad;\n\nvoid main() {\n  gl_Position = vec4(quad, 0, 1.0);\n}\n','precision highp float;\n\nuniform sampler2D iCellGridTexture;\nuniform vec2 iGridSize, iCanvasSize;\nuniform int iRelease;\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\n\nint C(int a, int b) {\n  return int(mod(float(a), float(b)));\n}\n\nvec2 w(int a) {\n  return vec2(a / 256, C(a, 256));\n}\n\nbool f(float a, float b) {\n  return abs(a - b) < 1e-4;\n}\n\nbool v(vec2 a, vec2 b, vec2 c) {\n  return a.x > b.x && a.x < c.x && a.y > b.y && a.y < c.y;\n}\n\nvec2 A(vec2 b) {\n  vec2 a = gl_FragCoord.xy / iCanvasSize;\n  return vec2(0.0, 0.0) + iGridSize * a;\n}\n\nbool i(vec2 a) {\n  return a.x >= 0.0 && a.y >= 0.0 && a.x <= 1.0 && a.y <= 1.0;\n}\n\nvec4 D(const vec4 a) {\n  int b = int(a.x), c = int(a.y);\n  return vec4(w(b), w(c)) / 255.0;\n}\n\nbool j(const vec4 a) {\n  return!f(a.y, -1.0);\n}\n\nvoid x(vec2 a) {\n  if (iRelease == 1)\n    return;\n  vec4 b = vec4(1.0, 0.5, 0.5, 1.0), c = vec4(0.5, 0.5, 1.0, 1.0), d = vec4(0.5, 1.0, 0.5, 1.0);\n  if (mod(a.x, 100.0) < 3.0 || mod(a.y, 100.0) < 3.0)\n    gl_FragColor = (b + gl_FragColor) / 2.0;\n  if (v(a.xy, vec2(0.0, 0.0), vec2(10.0, 10.0)))\n    gl_FragColor = (d + gl_FragColor) / 2.0;\n  if (v(a.xy, vec2(100.0, 100.0), vec2(110.0, 110.0)))\n    gl_FragColor = (c + gl_FragColor) / 2.0;\n}\n\nvoid main() {\n  vec2 a = A(gl_FragCoord.xy), b = a / iGridSize;\n  if (!i(b)) {\n    gl_FragColor = h, x(a);\n    return;\n  }\n  vec4 c = texture2D(iCellGridTexture, b);\n  if (!j(c))\n    discard;\n  else\n    gl_FragColor = D(c);\n}\n');
var b=this.a.gl;Z(b,'OES_texture_float'),b.disable(2929),this.c=new Igloo.Program(this.a.gl,'precision highp float;\n\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\nattribute vec2 quad;\n\nvoid main() {\n  gl_Position = vec4(quad, 0, 1.0);\n}\n','precision highp float;\n\nuniform sampler2D iCellGridTexture;\nuniform vec2 iCellGridSize;\nuniform int iStepSize;\nuniform bool iUseTorusDistanceForSeeds;\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\n\nbool f(float a, float b) {\n  return abs(a - b) < 1e-4;\n}\n\nbool i(vec2 a) {\n  return a.x >= 0.0 && a.y >= 0.0 && a.x <= 1.0 && a.y <= 1.0;\n}\n\nvec4 m() {\n  return vec4(-1.0, -1.0, -1.0, -1.0);\n}\n\nvec2 t(const vec4 a) {\n  return vec2(a.z, a.w);\n}\n\nbool j(const vec4 a) {\n  return!f(a.y, -1.0);\n}\n\nfloat u(vec2 a, vec2 b, vec2 c) {\n  float d = min(abs(a.x - b.x), c.x - abs(a.x - b.x)), g = min(abs(a.y - b.y), c.y - abs(a.y - b.y));\n  return sqrt(d * d + g * g);\n}\n\nvec4 e(const vec4 b, const vec2 z) {\n  vec2 c = (gl_FragCoord.xy + z) / iCellGridSize;\n  vec4 a = texture2D(iCellGridTexture, c);\n  a = !i(c) && !iUseTorusDistanceForSeeds ? m() : a;\n  if (!j(a))\n    return b;\n  else if (!j(b))\n    return a;\n  else {\n    vec2 d = t(b), g = t(a);\n    if (iUseTorusDistanceForSeeds) {\n      if (u(d, gl_FragCoord.xy, iCellGridSize) > u(g, gl_FragCoord.xy, iCellGridSize))\n        return a;\n    }\n    else if (distance(d, gl_FragCoord.xy) > distance(g, gl_FragCoord.xy))\n      return a;\n  }\n  return b;\n}\n\nvoid main() {\n  vec2 b = gl_FragCoord.xy / iCellGridSize;\n  if (!i(b))\n    discard;\n  vec4 a = texture2D(iCellGridTexture, b);\n  a = e(a, vec2(0, iStepSize)), a = e(a, vec2(iStepSize, iStepSize)), a = e(a, vec2(iStepSize, 0)), a = e(a, vec2(iStepSize, -iStepSize)), a = e(a, vec2(0, -iStepSize)), a = e(a, vec2(-iStepSize, -iStepSize)), a = e(a, vec2(-iStepSize, 0)), a = e(a, vec2(-iStepSize, iStepSize)), gl_FragColor = a;\n}\n'),
this.e=new Igloo.Program(this.a.gl,'precision highp float;\n\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\nattribute vec2 quad;\n\nvoid main() {\n  gl_Position = vec4(quad, 0, 1.0);\n}\n','precision highp float;\n\nuniform sampler2D iCellGridTexture;\nuniform vec2 iCellGridSize;\nuniform vec4 iBackgroundColor;\nconst vec4 o = vec4(1.0, 0.0, 0.0, 1.0), k = vec4(0.0, 1.0, 0.0, 1.0), l = vec4(0.0, 0.0, 1.0, 1.0), r = vec4(0.0, 1.0, 1.0, 1.0), q = vec4(1.0, 0.0, 1.0, 1.0), n = vec4(1.0, 1.0, 0.0, 1.0), h = vec4(0.0, 0.0, 0.0, 1.0), p = vec4(1.0, 1.0, 1.0, 1.0);\n\nint s(int a, int b) {\n  return a * 256 + b;\n}\n\nbool f(float a, float b) {\n  return abs(a - b) < 1e-4;\n}\n\nbool y(vec4 a, vec4 b) {\n  return f(a.x, b.x) && f(a.y, b.y) && f(a.z, b.z) && f(a.w, b.w);\n}\n\nvec4 B(float a, float b, vec2 c) {\n  return vec4(a, b, c);\n}\n\nvec4 m() {\n  return vec4(-1.0, -1.0, -1.0, -1.0);\n}\n\nvoid main() {\n  vec2 b = gl_FragCoord.xy / iCellGridSize, c = vec2(b.x, 1.0 - b.y);\n  vec4 a = texture2D(iCellGridTexture, c);\n  if (y(a, iBackgroundColor))\n    gl_FragColor = m();\n  else {\n    int d = s(int(a.r * 255.0), int(a.g * 255.0)), g = s(int(a.b * 255.0), int(a.a * 255.0));\n    gl_FragColor = B(float(d), float(g), gl_FragCoord.xy);\n  }\n}\n'),
this.f=this.a.array(Igloo.QUAD2),this.h=this.a.texture(null,6408,10497,9728,5126).blank(this.b,this.b),this.d=this.a.texture(null,6408,10497,9728,5126).blank(this.b,this.b),this.k=this.a.texture(null,6408,10497,9728,5121).blank(this.b,this.b),this.l=this.a.framebuffer()}function qa(a,b){this.a=a,this.b=b}var ga=[i(7667884),i(14373119),i(5046527),i(9651967),i(10042034),i(4150527),i(233724),i(16777215)],V=[i(7051762),i(4814543),i(8428277),i(8305894),i(9011445),i(970239),i(5611513)];ia()})();
